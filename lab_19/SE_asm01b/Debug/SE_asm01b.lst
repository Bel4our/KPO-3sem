Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/13/24 10:54:51
SE_asm01b.asm						     Page 1 - 1


				.586P                                                               
				.MODEL FLAT, STDCALL                                                
				includelib ucrt.lib                                                 
				includelib kernel32.lib                                             
				includelib "..\Debug\SE_asm01a.lib"

				ExitProcess         PROTO   : DWORD                                         
				system              PROTO C : DWORD                                         
				GetStdHandle        PROTO   : DWORD                                         
				printConsole        PROTO : DWORD, : DWORD                                  
				                                                                            
				WriteConsoleA       PROTO   : DWORD, : DWORD, : DWORD, : DWORD, : DWORD     
				SetConsoleTitleA    PROTO   : DWORD                                     

				getmin      PROTO : DWORD, : DWORD
				getmax      PROTO : DWORD, : DWORD

				SetConsoleOutputCP  PROTO : DWORD                                   
				                                                                    
				SetConsoleCP PROTO : DWORD                                          


				.STACK 4096                                                         

 00000000			.CONST                                                              
 = 0000000A			endl        equ 0ah                                                 
 00000000 0A 00			str_endl    byte endl, 0                                            
 00000002 70 61 75 73 65	str_pause   db 'pause', 0
	   00
 00000008  00000028 [		zero        byte 40 dup(0)
	    00
	   ]


 00000000			.DATA                                                           
 00000000 FFFFFFFB		Array           SDWORD   -5, 5, 23, -1, 25, 8, -4, 22, 9, 0 
	   00000005
	   00000017
	   FFFFFFFF
	   00000019
	   00000008
	   FFFFFFFC
	   00000016
	   00000009
	   00000000
 00000028 C7 E0 E4 E0 ED	consoleTitle    BYTE    'Задание 3',0           
	   E8 E5 20 33 00
 00000032 C7 E0 E4 E0 F7	text            BYTE     "Задача : getmax + getmin = "
	   E0 20 3A 20 67
	   65 74 6D 61 78
	   20 2B 20 67 65
	   74 6D 69 6E 20
	   3D 20
 0000004D  00000028 [		string          BYTE     40 dup(0)
	    00
	   ]
 00000075 CC E8 ED E8 EC	min_string      BYTE    "Минимальное значение = "
	   E0 EB FC ED EE
	   E5 20 E7 ED E0
	   F7 E5 ED E8 E5
	   20 3D 20
 0000008C  00000028 [		min_str         BYTE     40 dup(0)
	    00
	   ]
 000000B4 CC E0 EA F1 E8	max_string      BYTE    "Максимальное значение = "
	   EC E0 EB FC ED
	   EE E5 20 E7 ED
	   E0 F7 E5 ED E8
	   E5 20 3D 20
 000000CC  00000028 [		max_str         BYTE     40 dup(0)
	    00
	   ]

 000000F4 00000000		messageSize     DWORD   ?
 000000F8 00000000		min             SDWORD  ?
 000000FC 00000000		max             SDWORD  ?
 00000100 00000000		result          SDWORD  ?
 00000104

 = 000000D2			HW              =($ - text)                                         
 00000104 00000000		consolehandle   DWORD 0h                                            

 00000000			.CODE                                                               

 00000000			int_to_char PROC uses eax ebx ecx edi esi,
				                    pstr        : dword, 
				                    intfield    : sdword 
 00000008  8B 7D 08		    mov edi, pstr            
 0000000B  8B 45 0C		    mov eax, intfield        
 0000000E  33 F6		    xor esi, esi             
 00000010  BB 0000000A		    mov ebx, 10              

 00000015  85 C0		    test eax, eax              
 00000017  7D 06		    jge skip_neg               
 00000019  C6 07 2D		    mov byte ptr [edi], '-'    
 0000001C  47			    inc edi                    
 0000001D  F7 D8		    neg eax                    
 0000001F			skip_neg:

 0000001F			convert_loop:
 0000001F  33 D2		    xor edx, edx              
 00000021  F7 F3		    div ebx                   
 00000023  66| 52		    push dx                   
 00000025  46			    inc esi                   
 00000026  85 C0		    test eax, eax             
 00000028  75 F5		    jnz convert_loop          

 0000002A			write_loop:
 0000002A  66| 5A		    pop dx                   
 0000002C  80 C2 30		    add dl, '0'              
 0000002F  88 17		    mov [edi], dl            
 00000031  47			    inc edi                  
 00000032  4E			    dec esi                  
 00000033  75 F5		    jnz write_loop           

				    ret                      
 0000003E			int_to_char ENDP


 0000003E			main PROC                                                           
 0000003E			START :                                                             
				        INVOKE SetConsoleOutputCP, 1251d
				        INVOKE SetConsoleCP, 1251d
				        
				        INVOKE getmin, OFFSET Array, LENGTHOF Array                         
 0000005E  A3 000000F8 R	        mov min, eax
				        INVOKE int_to_char, OFFSET min_str, min
				        INVOKE printConsole, OFFSET min_string, OFFSET  consoleTitle        
				        INVOKE printConsole, OFFSET str_endl, OFFSET  consoleTitle
				        
				        INVOKE getmax, OFFSET Array, LENGTHOF Array                         
 0000009D  A3 000000FC R	        mov max, eax
				        INVOKE int_to_char, OFFSET max_str, max
				        INVOKE printConsole, OFFSET max_string, OFFSET  consoleTitle        
				        INVOKE printConsole, OFFSET str_endl, OFFSET  consoleTitle
				        
 000000D0  03 05 000000F8 R	        add eax, min                                                        
 000000D6  A3 00000100 R	        mov result, eax
				        INVOKE int_to_char, OFFSET string, result
				        INVOKE printConsole, OFFSET text, OFFSET  consoleTitle      
				        INVOKE printConsole, OFFSET str_endl, OFFSET  consoleTitle
				        
 00000109  68 00000002 R	        push offset str_pause                                       
 0000010E  E8 00000000 E	        call system                                                 
 00000113  6A FF		        push - 1                                                    
 00000115  E8 00000000 E	        call ExitProcess                                            


 0000011A			main ENDP                                                           
 0000011A			printConsole     PROC uses eax ebx ecx edi esi,
				                        pstr    : dword,
				                        ptitle  : dword

				    INVOKE SetConsoleTitleA, ptitle
				    INVOKE GetStdHandle, -11
 00000131  8B 75 08		    mov esi, pstr                                       
 00000134  BF FFFFFFFF		    mov edi, -1                                         
 00000139			count:                                                  
 00000139  47			    inc edi                                             
 0000013A  80 3C 3E 00		    cmp byte ptr [esi+edi], 0
 0000013E  75 F9		    jne count                                           

				    INVOKE WriteConsoleA, eax, pstr, edi, 0, 0          

				    ret
 00000157			printConsole ENDP

				end main
Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/13/24 10:54:51
SE_asm01b.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000030 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000108 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000157 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getmax . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getmin . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
int_to_char  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000003E Public STDCALL
  pstr . . . . . . . . . . . . .	DWord	 bp + 00000008
  intfield . . . . . . . . . . .	DWord	 bp + 0000000C
  skip_neg . . . . . . . . . . .	L Near	 0000001F _TEXT	
  convert_loop . . . . . . . . .	L Near	 0000001F _TEXT	
  write_loop . . . . . . . . . .	L Near	 0000002A _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000003E _TEXT	Length= 000000DC Public STDCALL
  START  . . . . . . . . . . . .	L Near	 0000003E _TEXT	
printConsole . . . . . . . . . .	P Near	 0000011A _TEXT	Length= 0000003D Public STDCALL
  pstr . . . . . . . . . . . . .	DWord	 bp + 00000008
  ptitle . . . . . . . . . . . .	DWord	 bp + 0000000C
  count  . . . . . . . . . . . .	L Near	 00000139 _TEXT	
system . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Array  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
HW . . . . . . . . . . . . . . .	Number	 000000D2h   
consoleTitle . . . . . . . . . .	Byte	 00000028 _DATA	
consolehandle  . . . . . . . . .	DWord	 00000104 _DATA	
endl . . . . . . . . . . . . . .	Number	 0000000Ah   
max_string . . . . . . . . . . .	Byte	 000000B4 _DATA	
max_str  . . . . . . . . . . . .	Byte	 000000CC _DATA	
max  . . . . . . . . . . . . . .	DWord	 000000FC _DATA	
messageSize  . . . . . . . . . .	DWord	 000000F4 _DATA	
min_string . . . . . . . . . . .	Byte	 00000075 _DATA	
min_str  . . . . . . . . . . . .	Byte	 0000008C _DATA	
min  . . . . . . . . . . . . . .	DWord	 000000F8 _DATA	
result . . . . . . . . . . . . .	DWord	 00000100 _DATA	
str_endl . . . . . . . . . . . .	Byte	 00000000 CONST	
str_pause  . . . . . . . . . . .	Byte	 00000002 CONST	
string . . . . . . . . . . . . .	Byte	 0000004D _DATA	
text . . . . . . . . . . . . . .	Byte	 00000032 _DATA	
zero . . . . . . . . . . . . . .	Byte	 00000008 CONST	

	   0 Warnings
	   0 Errors
